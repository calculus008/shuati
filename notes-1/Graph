LE_133_Clone_Graph                        *****

# Topological Sort
LE_207_Course_Schedule
LE_332_Reconstruct_Itinerary             *****

# DFS/Union Find
LE_399_Evaluate_Division                 *****
LE_734_Sentence_Similarity               *****
LE_737_Sentence_Similarity_II            *****    similarity relation is transitive
LE_684_Redundant_Connection              Union Find
LE_685_Redundant_Connection_II           Union Find
LE_547_Friend_Circles                    ******
LE_733_Flood_Fill
LE_261_Graph_Valid_Tree                  Detect cycle in undirected graph  *****
Find_Cycle_For_Graph                     ******

# Convert binary tree into graph
LE_863_All_Nodes_Distance_K_In_Binary_Tree
LE_742_Closest_Leaf_In_A_Binary_Tree


LE_943_Find_The_Shortest_Superstring
LE_886_Possible_Bipartition
LE_785_Is_Graph_Bipartite

LE_934_Shortest_Bridge

#Need to find way to represent a unique state for avoiding duplicate path in BFS
LE_864_Shortest_Path_To_Get_All_Keys
LE_847_Shortest_Path_Visiting_All_Nodes

LE_841_Keys_And_Rooms
LE_329_Longest_Increasing_Path_In_A_Matrix
LE_827_Making_A_Large_Island
LE_817_Linked_List_Components
LE_802_Find_Eventual_Safe_States
LE_787_Cheapest_Flights_Within_K_Stops (**)
LE_675_Cut_Off_Trees_For_Golf_Event
LE_126_Word_Ladder_II
LE_815_Bus_Routes



#Bellman-Ford (DP)
LE_787_Cheapest_Flights_Within_K_Stops
LE_743_Network_Delay_Time

#Dijskra
LE_743_Network_Delay_Time
LE_787_Cheapest_Flights_Within_K_Stops


LeetCode 964. Least Operators to Express Number
LeetCode 959. Regions Cut By Slashes
LeetCode 882. Reachable Nodes In Subdivided Graph

1. Cycle Detection in Directed Graph (using DFS):
Use Depth-First Search (DFS) with a recursion stack.
If a node is visited twice during the recursion (i.e., it's in the recursion stack), a cycle is detected.
Algorithm:
Mark each node with 3 states: not visited, visiting, and visited.
If you reach a node that's visiting, a cycle exists.


2. Cycle Detection in Undirected Graph (using DFS or Union-Find):
DFS: If you revisit a node that is not the parent of the current node, a cycle exists.
Union-Find: Check if two nodes being connected are already part of the same set.

bq1: project that you most interested in，详细了解了一下项目内容
bq2: quick decision, result

bq1: challenging project, most challenging part, how the problem was solved
bq2: extra work for your team, result

BQ1: 你在工作过程中发现了哪些问题，并且说服你的同事同意你的意见。
BQ2: 你工作中对工作优先级的更改策略。

BQ1: 你在工作中和上级的意见不同，最终说服了上级。
BQ2: 在你之前工作中遇到的最大的挑战

BQ1: 你在解决了哪些问题
BQ2: 你在工作中遇到的最大的挑战

BQ1: 你在工作中通过什么衡量指标改变了你的开发策略

1. 至少要准备10个故事，而且要熟记细节，口语表达最好事先准备好，每一句话不仅仅要解释清楚意思，也要对应LP。
2. 切勿眼高手低，在脑子里搞懂了不一定就能流利地表达并给对方也讲明白

BQ:
(1) when you finish task outside of the scope
(2) when you find out your approach isn't the best

BQ deal with limited resource or time

你做过的比较creative 的project？你之前有在公司做过什么贡献么？遇到过什么challenge？每个BQ都会有一些follow up对细节的追问

BQ, tell me a time when you have conflict with your manager
BQ most prouded project + followup
tell me a time when you failed a project.

和同事冲突的例子
没有meet deadline的例子
你的提议没有被manager接受的例子

BQ analysis and solve problems, a situation solve a complex problem

每輪都有LP，但發現問題主要都是圍繞 Bias For Action 和 Deliver Result
這個起碼要準備五個例子吧～其他LP感覺也都沒啥被問?!

tell me the time you push the team to get higher standard. 这题我卡住了我听成 你不得不放弃high standard due to any reasons...

tell me the time when you have to solve a complex system
follow up what do you do when you have to pick design A vs design B

纯BQ - 深入问了很多关于如果有反对意见的时候怎么处理的

1. 怎么处理conflict，与经理或者同事
2. 怎么处理deadline，有没有达不成的情况
3. ownership，你做了什么职责之外的事
这仨问题我感觉几乎问了3,4遍，所以大家一定要在这几个上面多准备几个例子。

问了各种情景怎么debug。。。还有如果已知code有问题，但是你不熟悉这个package，应该如何deep dive。。。
    第一次遇到这种问法，有点懵，平时常常做的这些事情一慌，全都想不起来了。。。
就是要先判断代码什么时间开始出错的，然后根据commit和metrics来确定哪一部分的代码出bug了之类的。。。然后就要先revert之类的保证production正常运行，然后再修bug。。。
就是工作时候平常每天干的事情。。但是问法太模糊，我以为只给package和bug的症状，没有其他的信息。。。所以答崩了。


complex problem solved with simple solution

give me a time have conflict, give me a time your proud project, give me a time receive constructive feedback

1， 介绍下你做过的最有挑战的项目。要求是业界的，不是学校的。会根据回答追问。比如我就被问到这个问题是你自己发现的，还是别人指出来的。
2，有什么项目是自己主动要求做的？
3，项目做的差不多了，要改变方案怎么办？
4，牺牲短期利益成全长期利益的经历
5，自我介绍
6，跟别人意见不合，怎么说服他们？追问了细节，就是要摆证据说明你的方案可行。
7，描述你怎么应对项目时间很紧的经历






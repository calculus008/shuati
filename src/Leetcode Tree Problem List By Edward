Basic
LE_94_Binary_Tree_Inorder_Traversal  -- done
LE_144_Binary_Tree_Preorder_Traversal -- done
LE_145_Binary_Tree_Postorder_Traversal  -- done
LE_102_Binary_Tree_Level_Order_Traversal -- done
LE_314_Binary_Tree_Vertical_Order_Traversal  -- done
LE_987_Vertical_Order_Traversal_Of_A_Binary_Tree  - same as 314 but sort on the same level

Preorder
LE_100_Same_Tree  -- done
LE_101_Symmetric_Tree  -- done
LE_617_Merge_Two_Binary_Trees  -- done
LE_226_Invert_Binary_Tree   -- done
LE_257_Binary_Tree_Paths  -- done
LE_112_Path_Sum  -- done
LE_113_Path_Sum_II  -- done
LE_129_Sum_Root_To_Leaf_Numbers  -- done
LE_298_Binary_Tree_Longest_Consecutive_Sequence          (***)  -- done
LE_111_Min_Depth_Of_Binary_Tree  -- done

Postorder
LE_104_Max_Depth_Of_Binary_Tree         -- done
LE_110_Balanced_Binary_Tree    -- done
LE_124_Binary_Tree_Max_Path_Sum                          (***)  -- done
LE_687_Longest_Univalue_Path                             (***)(***)  -- done
LE_250_Count_Univalue_Subtrees                      -- done
LE_366_Find_Leaves_Of_Binary_Tree                        (***)  -- revisit
LE_337_House_Robber_III

BFS
LE_107_Binary_Tree_Level_Order_Traversal_II   -- done
LE_103_Binary_Tree_Zigzag_Level_Order_Traversal    -- done
LE_199_Binary_Tree_Right_Side_View                       (***)  --- done

BST
LE_98_Validate_BST  -- done
LE_235_Lowest_Common_Ancestor_Of_BST                -- done
LE_236_Lowest_Common_Ancestor_Of_BT                 -- done
LE_108_Convert_Sorted_Array_To_BST                       (***, similar problem LE_654_Maximum_Binary_Tree)  -- done
LE_109_Convert_Sorted_List_To_BST                        (***)  - done
LE_173_Binary_Search_Tree_Iterator                       (***)  -- done
LE_230_Kth_Smallest_Element_In_BST                       (****) (****)   -- done
LE_285_Inorder_Successor_In_BST                          (***)   -- done
LE_510_Inorder_Successor_In_BST_II                              -- done
LE_270_Closest_BST_Value                                        -- done
LE_272_Closest_BST_Value_II                              (****) (****)  --- done
LE_99_Recover_BST                                   -- revisit
LE_701_Insert_Into_A_Binary_Search_Tree                 -- done

Hard By Importance
1.Very Important
LE_116_Populating_Next_Right_Pointers_In_Each_Node  -- done
LE_117_Populating_Next_Right_Pointers_In_Each_Node_II  -- done (BFS can solve both problems)
LE_314_Binary_Tree_Vertical_Order_Traversal              (lint 651, 高频班题） -- done, dup
LE_96_Unique_BST                                         (DP)

2.Low Frequency, less important
LE_156_Binary_Tree_Upside_Down
LE_114_Flatten_Binary_Tree_To_LinkedList
LE_255_Verify_Preorder_Sequence_In_BST
LE_333_Largest_BST_Subtree                               (***)
LE_222_Count_Complete_Tree_Nodes                         (***)
LE_105_Construct_Binary_Tree_From_Preorder_Inorder
LE_106_Construct_Binary_Tree_From_Postorder_Inorder
LE_95_Unique_BST_II
LE_331_Verify_Preorder_Serialization_Of_A_Binary_Tree
1.String
LE_05_Longest_Palindromic_Substring
LE_28_Implementing_Strstr
LE_125_Valid_Palindrome
LI_627_LongestPalindrome

LE_516_Longest_Palindromic_Subsequence
LI_841_String_Replace
LI_594_StrStr_2 (O(n+m))

====================================================

2.Binary Search
LE_33_Search_In_Rotated_Sorted_Array         (lint 62)
LE_81_Search_In_Rotated_Sorted_Array_II
LE_278_First_Bad_Version                     (lint 74)
LE_153_Find_Min_In_Rotated_Sorted_Array
LE_154_Find_Min_In_Rotated_Sorted_Array_II
LE_278_First_Bad_Version                     (lint 74)
LE_162_Find_Peak_Element                     (lint 75)
LE_658_Find_K_Closest_Elements               (lint 460)  (****)
LI_585_Maximum_Number_In_Mountain_Sequence
LI_458_Last_Position_Of_Target
LI_447_Search_In_A_Big_Sorted_Array          (**)

#Math
LE_50_POW
LE_69_Sqrt
LE_367_Valid_Perfect_Square
LI_428_Pow                                   (??)
LI_140_Fast_Power                            (??)
LI_586_Sqrtx_II

LI_014_First_Position_Of_Target
LI_254_Drop_Eggs
LI_459_Closest_Number_In_Sorted_Array
LI_462_Total_Occurrence_Of_Target            (***, find first and find last)
LI_235_Prime_Factorization
LE_34_Search_For_A_Range                     (lint 61)
LE_29_Divide_Two_Integers                    (lint 414)   (***)

#Binary Search on Values
LE_644_Maximum_Average_Subarray_II           (lint 617)   (****)
LI_183_Wood_Cut
LI_437_Copy_Books

LE_74_Search_In_2D_Matrix                    (lint 28)
LI_38_Search_A_2D_Matrix_II
LE_302_Smallest_Rectangle_Enclosing_Black_Pixels  (lint 600) (***)

====================================================

3.Two Pointers
LE_125_Valid_Palindrome                      (lint 415)
LE_680_Valid_Palindrome_II                   (lint 891)

LE_01_Two_Sum
LE_167_Two_Sum_II_Array_Is_Sorted            (lint 608)
LE_170_Two_Sum_III_Data_Structure_Design     (lint 607)
LI_587_Two_Sum_Unique_Pairs
LI_610_Two_Sum_Difference_Equals_To_Target   (**)
LE_15_3Sum                                   (lint 57)
LE_16_3Sum_Closest                           (lint 533)
LE_18_4Sum                                   (lint 58)
LE_454_4Sum_II
LE_611_Valid_Triangle_Number                 (lint 382)  (***)
LE_259_3Sum_Smaller                          (lint 59)   (***)
LI_609_Two_Sum_Less_Than_Or_Equal_To_Target
LI_604_Window_Sum

LI_521_Remove_Duplicate_Numbers_In_Array     (leet 26)
LE_26_Remove_Dup_From_Sorted_Array           (lint 521)
LE_80_Remove_Dup_From_Sorted_Array_II        (lint 101)

LE_75_Set_Colors                             (lint 148)   Dutch Flag
LI_143_Sort_Colors_II                                     Rainbow Sort (***)
LI_625_Partition_Array_II
LI_539_Move_Zero

LI_228_Middle_Of_Linked_List
LE_141_Linked_List_Cycle                     (lint 102)
LE_142_Linked_List_Cycle_II                  (lint 103)
LE_160_Intersection_Of_Tow_Linked_List       (lint 380)

LE_215_Kth_Largest_Element_In_Array          (lint 5)     QuickSelect
LI_461_Kth_Smallest_Number                                QuickSelect, only difference from LE_215 is partition condition (smaller on left, bigger on right)
LI_031_Partition_Array                       (same as LE_75_Set_Colors Dutch Flag)
LI_894_Pancake_Sorting

====================================================

4.BFS and Topological Sort

LE_17_Letter_Combinations_Of_A_Phone_Number
LE_752_Open_The_Lock

LE_200_Number_Of_Islands                     (lint 433)
LE_305_Number_Of_Islands_II                  (lint 434)  (Union Find)
LE_695_Max_Area_Of_Island
LE_749_Contain_Virus
LE_733_Flood_Fill
LE_102_Binary_Tree_Level_Order_Traversal     (lint 69)
LE_107_Binary_Tree_Level_Order_Traversal_II  (lint 70)
LI_611_Knight_Shortest_Path

LI_127_Topological_Sorting
LE_207_Course_Schedule                       (lint 615)
LE_210_Course_Schedule_II                    (lint 616)
LE_444_Sequence_Reconstruction               (lint 605)

LE_133_Clone_Graph                           (lint 137)
LE_297_Serialize_And_Deserialize_Binary_Tree (lint 7)

LE_127_Word_Ladder
LI_120_Word_Ladder
LE_126_Word_Ladder_II
LI_121_Word_Ladder_II

LI_242_Convert_BinaryTree_To_Linked_Lists_By_Depth
LE_103_Binary_Tree_Zigzag_Level_Order_Traversal  (line 71)

LI_531_Six_Degrees
LI_598_Zombie_In_Matrix
LI_618_Search_Graph_Nodes
LI_178_Graph_Valid_Tree
LI_431_Connected_Component
LI_624_Remove_Substrings

LI_794_Sliding_Puzzle_II
LE_317_Shortest_Distance_From_All_Buildings  (lint 573. Build Post Office II)

#Variation of BFS
LE_847_Shortest_Path_Visiting_All_Nodes
LE_864_Shortest_Path_To_Get_All_Keys
LE_815_Bus_Routes
LE_773_Sliding_Puzzle
LE_787_Cheapest_Flights_Within_K_Stops
LE_675_Cut_Off_Trees_For_Golf_Event

LE_282_Expression_Add_Operators

====================================================

5.Binary Tree & Tree-based DFS

A.二叉树上求值，求路径 (Maximum / Minimum / Average / Sum / Paths)
LI_596_Minimum_Subtree
LE_257_Binary_Tree_Paths                     (lint 480)
LE_110_Balanced_Binary_Tree                  (lint 93)
LE_270_Closest_BST_Value                     (lint 900)
LE_236_Lowest_Common_Ancestor_Of_BT          (lint 88)   (assume LCA exists)
LI_578_Lowest_Common_Ancestor_III                        (LCA may not exist)
LE_235_Lowest_Common_Ancestor_Of_BST

B.二叉树结构变化
LE_114_Flatten_Binary_Tree_To_LinkedList     (lint 453)

C.BST
LE_230_Kth_Smallest_Element_In_BST           (lint 902)   **
LE_98_Validate_BST                           (lint 95)
LE_173_Binary_Search_Tree_Iterator           (lint 86)
LE_272_Closest_BST_Value_II                  (lint 901)

Optional
LE_94_Binary_Tree_Inorder_Traversal          (lint 67)
LE_145_Binary_Tree_Postorder_Traversal       (lint 68)
LE_144_Binary_Tree_Preorder_Traversal        (lint 66)
LE_104_Max_Depth_Of_Binary_Tree              (lint 97)
LE_111_Min_Depth_Of_Binary_Tree              (lint 155)
LI_597_Subtree_With_Maximum_Average
LI_474_Lowest_Common_Ancestor_II                         (with parent pointer)

LE_124_Binary_Tree_Max_Path_Sum                          (***)
LI_246_Binary_Tree_Path_Sum_II                           (find sum path start/end any where)
LI_472_Binary_Tree_Path_Sum_III
LE_124_Binary_Tree_Max_Path_Sum              (lint 94)   (find max sum of all paths)
LI_475_Binary_Tree_Maximum_Path_Sum_II

LE_285_Inorder_Successor_In_BST                          (revisit in 高频题班)
LI_448_Inorder_Successor_In_BST
LI_915_Inorder_Predecessor_In_BST

LE_298_Binary_Tree_Longest_Consecutive_Sequence     (lint 595)
LE_549_Binary_Tree_Longest_Consecutive_Sequence_II  (lint 614)
LI_619_Binary_Tree_Longest_Consecutive_Sequence_III

====================================================

6.基于组合的DFS
LE_78_Subsets                                             (lint 17)
LE_90_Subsets_II                                          (lint 18)
LE_39_Combination_Sum                                     (lint 135)
LE_40_Combination_SUM_II                                  (lint 153)
LE_77_Combinations                                        (lint 152)
LE_131_Palindrome_Partition                               (lint 136)
LE_44_Wildcards_Matching                                  (lint 192)
LE_10_Regular_Expression_Matching                         (lint 154)
LE_140_Word_Break_II                                      (lint 582)

LE_139_Word_Break                                         (lint 107)   ***
LI_680_Split_String
LI_570_Find_The_Missing_Number_II
LI_652_Factorization
LE_93_Restore_IP_Addresses                                (lint 426)
LE_22_Generate_Parentheses                                (lint 427)
LE_301_Remove_Invalid_Parentheses                         (lint 780)   ***

LE_322_Coin_Change
LE_967_Numbers_With_Same_Consecutive_Differences

====================================================

7.基于排列、图的DFS
LE_46_Permutation                                         (lint 15)
LE_47_Permutation_II                                      (lint 16)
LI_010_String_Permutation_II
LE_31_NextPermutation                                     (lint 52, 190)
LI_51_Previous_Permutation
LE_51_N_Queens                                            (lint 33)
LE_52_N_Quees_II                                          (lint 34)
LE_681_Next_Closest_Time                                  (lint 862)
LE_17_Letter_Combinations_Of_A_Phone_Number               (lint 425)
LE_212_Word_Search_II                                     (lint 132)
LE_291_Word_Pattern_II                                    (lint 829)
LE_126_Word_Ladder_II                                     (lint 121)

Related:
LI_211_String_Permutation
LE_290_Word_Pattern

LE_60_Permutation_Sequence
LI_197_Permutation_Index
LI_198_Permutation_Index_II

====================================================

8.数据结构：栈，队列，哈希表，堆

LE_346_Moving_Average_From_Data_Stream
LE_225_Implement_Stack_Using_Queues
LI_494_Implement_Stack_By_Two_Queues
LE_387_First_Unique_Character_In_A_String (*)
LI_612_K_Closest_Points
LE_347_Top_K_Frequent_Elements                            (lint 544)
LI_544_Top_K_Largest_Numbers
LE_23_Merge_k_Sorted_Lists
LE_232_Implement_Queue_Using_Stacks
LE_264_Ugly_Number_II
LE_146_LRU_Cache
LI_209_First_Unique_Character_In_A_String
LE_346_Moving_Average_From_Data_Stream                    (lint 642)
LE_380_Insert_Delete_GetRandom_O1                         (lint 657)
LE_23_Merge_k_Sorted_Lists                                (lint 104)
LE_632_Smallest_Range                                     (***)

LE_402_Remove_K_Digits                                    (***)

LI_545_Top_K_Largest_Numbers_II
LI_486_Merge_K_Sorted_Arrays
LI_685_First_Unique_Number_In_Stream
LI_613_High_Five
LE_128_Longest_Consecutive_Sequence                       (lint 124)

#Iterators
LE_251_Flatten_2D_Vector                                  (lint 601)
LE_281_Zigzag_Iterator                                    (lint 540)
LE_339_Nested_List_Weight_Sum                             (lint 551)
LE_394_Decode_String                                      (lint 575)
LE_692_Top_K_Frequent_Words                               (lint 471)
LE_460_LFU_Cache                                          (lint 24)

#Design Questions
LE_146_LRU_Cache
LE_460_LFU_Cache
LE_432_All_O_One_Data_Structure
LE_895_Maximum_Frequency_Stack
LI_685_First_Unique_Number_In_Stream
LI_209_First_Unique_Character_In_A_String
LE_380_Insert_Delete_GetRandom_O1                         (lint 657)
LE_381_Insert_Delete_GetRandom_O1_Duplicates_Allowed      (lint 954)
LE_676_Implement_Magic_Dictionary

#Sliding Window
LE_03_Longest_Substring_Without_Repeating_Characters
LE_30_SubstrConactWords
LE_76_Min_Window_Substring
LE_159_Longest_Substring_With_At_Most_Two_Distinct_Chars
LE_209_Minimum_Size_Subarray_Sum
LE_239_Sliding_Window_Maximum
LE_340_Longest_Substring_With_At_Most_K_Distinct_Chars
LE_346_Moving_Average_From_Data_Stream
LE_438_Find_All_Anagrams_In_A_String
LE_567_Permutation_In_String

====================================================

9.数据结构：区间、数组、矩阵和树状数组
#Intervals
LE_56_Merge_Intervals                                     (lint 156)
LE_57_Insert_Interval                                     (lint 30)
LI_577_Merge_K_Sorted_Interval_Lists

#Merge
LI_839_Merge_Two_Sorted_Interval_Lists
LE_88_Merge_Sorted_Array                                  (lint 64)
LI_486_Merge_K_Sorted_Arrays
LE_21_Merge_Two_Sorted_Lists                              (lint 165)
LE_23_Merge_k_Sorted_Lists                                (lint 104)

#Intersection
LE_349_Intersection_Of_Two_Arrays                         (lint 547)
LE_350_Intersection_Of_Two_Arrays_II                      (lint 548)
LI_793_Intersection_Of_Arrays

#Subarray
LI_138_Subarray_Sum
LI_404_Subarray_Sum_II                                      *
LI_139_Subarray_Sum_Closest                                 *
LE_325_Maximum_Size_Subarray_Sum_Equals_k
LE_53_Maximum_Subarray                                    (lint 41)
LI_42_Maximum_Subarray_II                                   *
LI_43_Maximum_Subarray_III                                  ***
LI_620_Maximum_Subarray_IV                                  *
LI_45_Maximum_Subarray_Difference                           *
LE_643_Maximum_Average_Subarray_I                         (lint 868)
LE_644_Maximum_Average_Subarray_II                        (lint 617)
LE_318_Maximum_Product_Of_Word_Lengths
LE_152_Maximum_Product_Subarray                           (lint 191)

LE_121_Best_Time_To_Buy_And_Sell_Stock                    (lint 149)
LE_122_Best_Time_To_Buy_And_Sell_Stock_II                 (lint 150)
LE_123_Best_Time_To_Buy_And_Sell_Stock_III                (lint 151)
LE_188_Best_Time_To_Buy_And_Sell_Stock_IV                 (lint 393)
LE_309_Best_Time_To_Buy_And_Sell_Stock_With_Cooldown      (lint 995)
LE_714_Best_Time_To_Buy_And_Sell_Stock_With_Transaction_Fee  (lint 1000)

#Submatrix
LI_944_Maximum_Submatrix
LI_405_Submatrix_Sum
LE_311_Sparse_Matrix_Multiplication                       (lint 654)

#Median
LE_04_Median_Of_Two_Sorted_Arrays                         (lint 65)
LI_931_Median_Of_K_Sorted_Arrays


#Binary Indexed Tree
LE_303_Range_Sum_Query_Immutable                          (lint 943)
LE_304_Range_Sum_Query_2D_Immutable                       (lint 665)
LE_307_Range_Sum_Query_Mutable                            (lint 840)
LE_315_Count_Of_Smaller_Numbers_After_Self                (lint 1297)
LI_249_Count_Of_Smaller_Number_Before_Itself
LE_308_Range_Sum_Query_2D_Mutable                         (lint 817)
LI_532_Reverse_Pairs
LE_493_Reverse_Pairs

Advanced Algorithm
1.Follow Up Questions

#Kth Largest/Smallest
LE_378_Kth_Smallest_Element_In_A_Sorted_Matrix            (lint 401)
LE_373_Find_K_Pairs_With_Smallest_Sums                    (lint 465)
LI_543_Kth_Largest_In_N_Arrays
LI_461_Kth_Smallest_Number
LI_005_Kth_Largest_Number

#Sliding Window
LI_406_Minimum_Size_Subarray_Sum
LE_209_Minimum_Size_Subarray_Sum
LE_03_Longest_Substring_Without_Repeating_Characters      (lint 384)
LE_340_Longest_Substring_With_At_Most_K_Distinct_Chars    (lint 386)
LE_76_Minimum_Window_Substring                            (lint 32)
LE_611_Valid_Triangle_Number                              (lint 382) ***
LI_609_Two_Sum_Less_Than_Or_Equal_To_Target

#Matrix, DFS
LI_778_Pacific_Atlantic_Water_Flow

====================================================

2.Data Structure I - Union Find & Trie
#Union Find
UnionFindSet
UnionFindWithCount
UnionFindSetString
UnionFindWithCount1
UnionFindInMap
LE_547_Friend_Circles
LI_589_Connecting_Graph
LI_590_Connecting_Graph_II
LI_591_Connecting_Graph_III
LE_684_Redundant_Connection
LE_685_Redundant_Connection_II                              **
LI_178_Graph_Valid_Tree
LE_261_Graph_Valid_Tree
LE_200_Number_Of_Islands                                  (lint 433)
LE_305_Number_Of_Islands_II                               (lint 434)
LE_130_Surrounded_Regions                                 (lint 477)
LE_323_Number_Of_Connected_Components_In_Undirected_Graph
LI_432_Find_The_Weak_Connected_Component_In_The_Directed_Graph
LE_721_Accounts_Merge                                     (lint 1070)
LE_737_Sentence_Similarity_II
LI_629_Minimum_Spanning_Tree

#Trie
LE_208_Implement_Trie                                     (lint 442)
LE_211_Add_And_Search_Word                                (lint 473)
LI_559_Trie_Service
LE_79_Word_Search                                         (lint 123)
LE_212_Word_Search_II                                     (lint 132)
LI_635_Boggle_Game                                                   ***
LE_425_Word_Squares                                       (lint 634) **
LE_677_Map_Sum_Pairs
LE_745_Prefix_And_Suffix_Search
LE_720_Longest_Word_In_Dictionary

====================================================

3.Data Structure II - Stack, Deque, Heap
#Heap
LE_42_Trapping_Rain_Water                                 (lint 363)
LE_407_Trapping_Rain_Water_II                             (lint 364)
LE_295_Find_Median_From_Data_Stream                       (lint 81)
LE_239_Sliding_Window_Maximum                             (lint 362)
LI_360_Sliding_Window_Median
LE_480_Sliding_Window_Median

#Stack
LI_126_Max_Tree
LE_84_Largest_Rectangle_In_Histogram                      (lint 122)
LE_85_Max_Rectangle                                       (lint 510)
LE_155_Min_Stack                                          (lint 12)
LI_126_Max_Tree
LE_394_Decode_String                                      (lint 575)
LE_224_Basic_Calculator                                   (lint 978)
LE_227_Basic_Calculator_II                                (lint 980)
LE_772_Basic_Calculator_III                               (lint 849, 368)
LE_981_Basic_Calculator_IV                                (lint 981)
LE_150_Evaluate_Reverse_Polish_Notation

====================================================

4.Sweep Line and Binary Search
#Binary Search
LE_162_Find_Peak_Element                                  (lint 75)
LI_390_Find_Peak_Element_II
LI_183_Wood_Cut                                                        *
LI_437_Copy_Books                                                      **
LI_438_Copy_Books_II                                                   **
LE_643_Maximum_Average_Subarray_I                         (lint 868)
LE_644_Maximum_Average_Subarray_II                        (lint 617)   **
LE_69_Sqrt
LI_586_Sqrtx_II
LE_367_Valid_Perfect_Square
LE_29_Divide_Two_Integers                                 (lint 414)
LE_278_First_Bad_Version                                  (lint 74)
LE_287_Find_The_Duplicate_Number                          (lint 633)   ***
LE_302_Smallest_Rectangle_Enclosing_Black_Pixels          (lint 600)   ***
LE_719_Find_Kth_Smallest_Pair_Distance

#Line Sweep
LE_252_Meeting_Rooms                                      (lint 920)
LE_253_Meeting_Rooms_II                                   (lint 919)
LI_391_Number_Of_Airplanes_In_The_Sky
LI_821_Time_Intersection
LE_218_The_Sky_Line_Problem
LI_131_The_Skyline_Problem

====================================================

5 & 6.DP
LE_198_House_Robber                                       (lint 392)
LE_213_House_Robber_II                                    (lint 534)
LE_337_House_Robber_III                                   (lint 535)

LE_221_Maximal_Square                                     (lint 436)
LI_631_Maximal_Square_II                                               ***
LE_85_Max_Rectangle  (Solution 2, DP)                     (lint 510)

#Simple 2D DP
LE_62_Unique_Path
LE_63_Unique_Path_II
LE_64_Min_Path_Sum
LE_72_Edit_Distance

#Mutate from problems above - 3D DP
LI_1447_Calculation_The_Sum_Of_Path

LE_674_Longest_Continuous_Increasing_Subsequence
LI_397_Longest_Continuous_Increasing_Subsequence

#DFS Search + Memization
LI_398_Longest_Continuous_Increasing_Subsequence_II

LE_300_Longest_Increasing_Subsequence                     (lint 76)
LE_152_Maximum_Product_Subarray                           (lint 191)
LE_05_Longest_Palindromic_Substring                       (lint 200)

# 博弈类DP
LI_394_Coins_In_A_Line                                                 *
LI_395_Coins_In_A_Line_II                                              ***
LI_396_Coins_In_A_Line_III                                (leetcode 877)              ***

LI_438_Copy_Books_II                                                   **
LI_435_Post_Office_Problem                                             ***
LE_188_Best_Time_To_Buy_And_Sell_Stock_IV

#区间类DP
LI_476_Stone_Game
LI_593_Stone_Game_II
LE_312_Burst_Balloons
LI_435_Post_Office_Problem                                             ***

#匹配类动态规划
LE_72_Edit_Distance                                      （lint 119)
LI_623_K_Edit_Distance
LI_581_Longest_Repeating_Subsequence
LI_77_Longest_Common_Subsequence
LI_79_Longest_Common_Substring
LE_115_Distinct_Subsequences                              (lint 118)   ***
LE_97_Interleaving_String                                 (lint 29)    ***
LE_132_Palindrome_Partition_II

#Knapsack
https://blog.csdn.net/luoshengkim/article/details/76514558
LI_92_Backpack
LE_416_Partition_Equal_Subset_Sum
LI_125_Backpack_II
LI_440_Backpack_III                                                     ***
LI_562_Backpack_IV                                                      ***
LI_563_Backpack_V                                                       ***
LE_377_Combination_Sum_IV                                 (lint 564)    ***
LI_89_k_Sum                                                             ***
LI_91_Minimum_Adjustment_Cost                                           ***

LE_926_Flip_String_To_Monotone_Increasing

====================================================

7.Follow Up
#1.Subarray Sum (Use PrefixSum Technique)
LI_138_Subarray_Sum
LI_404_Subarray_Sum_II                                                  ***
LI_139_Subarray_Sum_Closest
LE_209_Minimum_Size_Subarray_Sum                          (lint 406)    ***

#SubMatrix in 2D array
LI_405_Submatrix_Sum
LI_944_Maximum_Submatrix
LI_558_Sliding_Window_Matrix_Maximum
LE_361_Bomb_Enemy                                         (lint 553)

#2.Continuous_Subarray
LI_402_Continuous_Subarray_Sum
LI_403_Continuous_Subarray_Sum_II (循环数组 ???)

LE_162_Find_Peak_Element                                  (lint 75)

#Array
LI_406_Minimum_Size_Subarray_Sum
LE_325_Maximum_Size_Subarray_Sum_Equals_k
LI_45_Maximum_Subarray_Difference                           *
LE_643_Maximum_Average_Subarray_I                         (lint 868)
LE_644_Maximum_Average_Subarray_II                        (lint 617)

#Bucket Sort
LE_164_Maxium_Gap                                         (lint 400)

#Quick Select
LI_005_Kth_Largest_Number
LI_461_Kth_Smallest_Number
LE_04_Median_Of_Two_Sorted_Arrays (Solution 3)

#Iterator
LE_341_Flatten_Nested_List_Iterator
LI_22_Flatten_List
LE_339_Nested_List_Weight_Sum
LE_251_Flatten_2D_Vector
LI_601_Flatten_2D_Vector
LE_281_Zigzag_Iterator
LI_541_Zigzag_Iterator_II

#Shortest Distance From All
LE_317_Shortest_Distance_From_All_Buildings              (lint 573)
LI_574_Build_Post_Office   (2D)                                            ***
LI_435_Post_Office_Problem (1D)  (DP)
LI_778_Pacific_Atlantic_Water_Flow

#leetcode Minimax type problems
